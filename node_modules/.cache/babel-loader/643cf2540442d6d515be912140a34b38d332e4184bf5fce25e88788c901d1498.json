{"ast":null,"code":"var _jsxFileName = \"P:\\\\mango-area\\\\mango-bruise-area\\\\src\\\\components\\\\ForgotPassword\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ForgotPassword.css';\nimport mangoLogo from '../../assets/Logo_black.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const navigate = useNavigate();\n  const [alertMessage, setAlertMessage] = useState('');\n  const emailRef = useRef(null);\n  const handlemainhomepage = useCallback(() => navigate('/mainhomepage'), [navigate]);\n  const handleSendEmail = useCallback(() => {\n    const email = emailRef.current.value.trim();\n    if (!email) {\n      setAlertMessage('Please enter your email address.');\n    } else {\n      setAlertMessage('');\n      const verificationCode = '123456'; // Fixed 6-digit code for testing\n      localStorage.setItem('verificationCode', verificationCode);\n      console.log(`Your verification code is: ${verificationCode}`); // Simulated email\n\n      navigate('/verify'); // Navigate to the Verify page\n    }\n  }, [navigate]);\n  const handleKeyDown = useCallback(event => {\n    if (event.key === 'Enter') {\n      handleSendEmail();\n    }\n  }, [handleSendEmail]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ForgotPassword-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ForgotPassword-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: mangoLogo,\n        alt: \"Mango Logo\",\n        className: \"ForgotPassword-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), alertMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-message\",\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: emailRef,\n        placeholder: \"Enter your email\",\n        className: \"ForgotPassword-input\",\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ForgotPassword-button\",\n        onClick: handleSendEmail,\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPassword, \"eo+Bn5GKeg9940+TJJJYF/yZWrw=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useNavigate","mangoLogo","jsxDEV","_jsxDEV","ForgotPassword","_s","navigate","alertMessage","setAlertMessage","emailRef","handlemainhomepage","handleSendEmail","email","current","value","trim","verificationCode","localStorage","setItem","console","log","handleKeyDown","event","key","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["P:/mango-area/mango-bruise-area/src/components/ForgotPassword/ForgotPassword.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useRef, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ForgotPassword.css';\r\nimport mangoLogo from '../../assets/Logo_black.png';\r\n\r\nfunction ForgotPassword() {\r\n    const navigate = useNavigate();\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const emailRef = useRef(null);\r\n    const handlemainhomepage = useCallback(() => navigate('/mainhomepage'), [navigate]);\r\n\r\n    const handleSendEmail = useCallback(() => {\r\n        const email = emailRef.current.value.trim();\r\n\r\n        if (!email) {\r\n            setAlertMessage('Please enter your email address.');\r\n        } else {\r\n            setAlertMessage('');\r\n            \r\n            const verificationCode = '123456'; // Fixed 6-digit code for testing\r\n            localStorage.setItem('verificationCode', verificationCode);\r\n\r\n            console.log(`Your verification code is: ${verificationCode}`); // Simulated email\r\n\r\n            navigate('/verify'); // Navigate to the Verify page\r\n        }\r\n    }, [navigate]);\r\n\r\n    const handleKeyDown = useCallback((event) => {\r\n        if (event.key === 'Enter') {\r\n            handleSendEmail();\r\n        }\r\n    }, [handleSendEmail]);\r\n\r\n    return (\r\n        <div className=\"ForgotPassword-container\">\r\n            <div className=\"ForgotPassword-box\">\r\n                <img src={mangoLogo} alt=\"Mango Logo\" className=\"ForgotPassword-logo\" />\r\n                <h1>Send Email</h1>\r\n                {alertMessage && <div className=\"alert-message\">{alertMessage}</div>}\r\n                <input\r\n                    type=\"text\"\r\n                    ref={emailRef}\r\n                    placeholder=\"Enter your email\"\r\n                    className=\"ForgotPassword-input\"\r\n                    onKeyDown={handleKeyDown}\r\n                />\r\n                <button className=\"ForgotPassword-button\" onClick={handleSendEmail}>\r\n                    Send Email\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,sBAAsB;AAC7B,OAAOC,SAAS,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMY,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMY,kBAAkB,GAAGX,WAAW,CAAC,MAAMO,QAAQ,CAAC,eAAe,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEnF,MAAMK,eAAe,GAAGZ,WAAW,CAAC,MAAM;IACtC,MAAMa,KAAK,GAAGH,QAAQ,CAACI,OAAO,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;IAE3C,IAAI,CAACH,KAAK,EAAE;MACRJ,eAAe,CAAC,kCAAkC,CAAC;IACvD,CAAC,MAAM;MACHA,eAAe,CAAC,EAAE,CAAC;MAEnB,MAAMQ,gBAAgB,GAAG,QAAQ,CAAC,CAAC;MACnCC,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEF,gBAAgB,CAAC;MAE1DG,OAAO,CAACC,GAAG,CAAC,8BAA8BJ,gBAAgB,EAAE,CAAC,CAAC,CAAC;;MAE/DV,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMe,aAAa,GAAGtB,WAAW,CAAEuB,KAAK,IAAK;IACzC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACvBZ,eAAe,CAAC,CAAC;IACrB;EACJ,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,oBACIR,OAAA;IAAKqB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,eACrCtB,OAAA;MAAKqB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BtB,OAAA;QAAKuB,GAAG,EAAEzB,SAAU;QAAC0B,GAAG,EAAC,YAAY;QAACH,SAAS,EAAC;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxE5B,OAAA;QAAAsB,QAAA,EAAI;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBxB,YAAY,iBAAIJ,OAAA;QAAKqB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAElB;MAAY;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpE5B,OAAA;QACI6B,IAAI,EAAC,MAAM;QACXC,GAAG,EAAExB,QAAS;QACdyB,WAAW,EAAC,kBAAkB;QAC9BV,SAAS,EAAC,sBAAsB;QAChCW,SAAS,EAAEd;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACF5B,OAAA;QAAQqB,SAAS,EAAC,uBAAuB;QAACY,OAAO,EAAEzB,eAAgB;QAAAc,QAAA,EAAC;MAEpE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC1B,EAAA,CAhDQD,cAAc;EAAA,QACFJ,WAAW;AAAA;AAAAqC,EAAA,GADvBjC,cAAc;AAkDvB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}