{"ast":null,"code":"var _jsxFileName = \"P:\\\\mango-area\\\\mango-bruise-area\\\\src\\\\components\\\\CropImage\\\\CropImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport demoImage from \"./demo-image.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageCropper(props) {\n  _s();\n  const {\n    imageToCrop,\n    onImageCropped\n  } = props;\n  const [cropConfig, setCropConfig] = useState(\n  // default crop config\n  {\n    unit: '%',\n    width: 30,\n    aspect: 16 / 9\n  });\n  const [imageRef, setImageRef] = useState();\n  async function cropImage(crop) {\n    if (imageRef && crop.width && crop.height) {\n      const croppedImage = await getCroppedImage(imageRef, crop, 'croppedImage.jpeg' // destination filename\n      );\n\n      // calling the props function to expose\n      // croppedImage to the parent component\n      onImageCropped(croppedImage);\n    }\n  }\n  function getCroppedImage(sourceImage, cropConfig, fileName) {\n    // creating the cropped image from the source image\n    const canvas = document.createElement('canvas');\n    const scaleX = sourceImage.naturalWidth / sourceImage.width;\n    const scaleY = sourceImage.naturalHeight / sourceImage.height;\n    canvas.width = cropConfig.width;\n    canvas.height = cropConfig.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(sourceImage, cropConfig.x * scaleX, cropConfig.y * scaleY, cropConfig.width * scaleX, cropConfig.height * scaleY, 0, 0, cropConfig.width, cropConfig.height);\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        // returning an error\n        if (!blob) {\n          reject(new Error('Canvas is empty'));\n          return;\n        }\n        blob.name = fileName;\n        // creating a Object URL representing the Blob object given\n        const croppedImageUrl = window.URL.createObjectURL(blob);\n        resolve(croppedImageUrl);\n      }, 'image/jpeg');\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(ReactCrop, {\n    src: imageToCrop || demoImage,\n    crop: cropConfig,\n    ruleOfThirds: true,\n    onImageLoaded: imageRef => setImageRef(imageRef),\n    onComplete: cropConfig => cropImage(cropConfig),\n    onChange: cropConfig => setCropConfig(cropConfig),\n    crossorigin: \"anonymous\" // to avoid CORS-related problems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageCropper, \"uuyf/7tGCBYFr+EmIhCBkHtoPRk=\");\n_c = ImageCropper;\nImageCropper.defaultProps = {\n  onImageCropped: () => {}\n};\nexport default ImageCropper;\nvar _c;\n$RefreshReg$(_c, \"ImageCropper\");","map":{"version":3,"names":["React","useState","ReactCrop","demoImage","jsxDEV","_jsxDEV","ImageCropper","props","_s","imageToCrop","onImageCropped","cropConfig","setCropConfig","unit","width","aspect","imageRef","setImageRef","cropImage","crop","height","croppedImage","getCroppedImage","sourceImage","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","Error","name","croppedImageUrl","window","URL","createObjectURL","src","ruleOfThirds","onImageLoaded","onComplete","onChange","crossorigin","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","$RefreshReg$"],"sources":["P:/mango-area/mango-bruise-area/src/components/CropImage/CropImage.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport demoImage from \"./demo-image.jpg\";\r\n\r\nfunction ImageCropper(props) {\r\n    const {imageToCrop, onImageCropped} = props;\r\n\r\n    const [cropConfig, setCropConfig] = useState(\r\n        // default crop config\r\n        {\r\n            unit: '%',\r\n            width: 30,\r\n            aspect: 16 / 9,\r\n        }\r\n    );\r\n\r\n    const [imageRef, setImageRef] = useState();\r\n\r\n    async function cropImage(crop) {\r\n        if (imageRef && crop.width && crop.height) {\r\n            const croppedImage = await getCroppedImage(\r\n                imageRef,\r\n                crop,\r\n                'croppedImage.jpeg' // destination filename\r\n            );\r\n\r\n            // calling the props function to expose\r\n            // croppedImage to the parent component\r\n            onImageCropped(croppedImage);\r\n        }\r\n    }\r\n\r\n    function getCroppedImage(sourceImage, cropConfig, fileName) {\r\n        // creating the cropped image from the source image\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = sourceImage.naturalWidth / sourceImage.width;\r\n        const scaleY = sourceImage.naturalHeight / sourceImage.height;\r\n        canvas.width = cropConfig.width;\r\n        canvas.height = cropConfig.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            sourceImage,\r\n            cropConfig.x * scaleX,\r\n            cropConfig.y * scaleY,\r\n            cropConfig.width * scaleX,\r\n            cropConfig.height * scaleY,\r\n            0,\r\n            0,\r\n            cropConfig.width,\r\n            cropConfig.height\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            canvas.toBlob(\r\n                (blob) => {\r\n                    // returning an error\r\n                    if (!blob) {\r\n                        reject(new Error('Canvas is empty'));\r\n                        return;\r\n                    }\r\n\r\n                    blob.name = fileName;\r\n                    // creating a Object URL representing the Blob object given\r\n                    const croppedImageUrl = window.URL.createObjectURL(blob);\r\n\r\n                    resolve(croppedImageUrl);\r\n                }, 'image/jpeg'\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ReactCrop\r\n            src={imageToCrop || demoImage}\r\n            crop={cropConfig}\r\n            ruleOfThirds\r\n            onImageLoaded={(imageRef) => setImageRef(imageRef)}\r\n            onComplete={(cropConfig) => cropImage(cropConfig)}\r\n            onChange={(cropConfig) => setCropConfig(cropConfig)}\r\n            crossorigin=\"anonymous\" // to avoid CORS-related problems\r\n        />\r\n    );\r\n}\r\n\r\nImageCropper.defaultProps = {\r\n    onImageCropped: () => {}\r\n}\r\n\r\nexport default ImageCropper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}